name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# 设置权限
permissions:
  contents: read
  pages: write
  id-token: write

# 并发控制
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建和部署到 GitHub Pages
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'package.json'

      - name: Install MoonBit
        run: |
          # 使用官方安装脚本
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash
          
          # 添加到 PATH
          echo "$HOME/.moon/bin" >> $GITHUB_PATH
          
          # 验证安装
          $HOME/.moon/bin/moon help

      - name: Install dependencies
        run: |
          # 删除可能存在的 lock 文件和 node_modules
          rm -rf package-lock.json node_modules
          # 重新安装依赖
          npm install

      - name: Build project
        run: npm run build
        env:
          NODE_ENV: production
          VITE_R2_PUBLIC_URL: https://${{ secrets.CLOUDFLARE_R2_BUCKET_NAME }}.${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.r2.cloudflarestorage.com

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # 上传资源到 Cloudflare R2
  upload-assets:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'package.json'

      - name: Install dependencies
        run: npm ci

      - name: Upload assets to R2
        run: npm run deploy:assets:smart
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_R2_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
          CLOUDFLARE_R2_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
          CLOUDFLARE_R2_BUCKET_NAME: ${{ secrets.CLOUDFLARE_R2_BUCKET_NAME }}

  # 更新资源路径配置
  update-config:
    runs-on: ubuntu-latest
    needs: [build-and-deploy, upload-assets]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'package.json'

      - name: Install dependencies
        run: npm ci

      - name: Update resource URLs
        run: |
          # 这里可以添加更新资源URL的逻辑
          # 例如更新配置文件中的CDN地址
          echo "资源上传完成，可以在这里更新配置"
